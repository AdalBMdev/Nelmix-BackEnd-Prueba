<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nelmix</name>
    </assembly>
    <members>
        <member name="T:Nelmix.Controllers.BankAccountController">
            <summary>
            Controlador para operaciones relacionadas con cuentas bancarias.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.BankAccountController.#ctor(Nelmix.Context.CasinoContext)">
            <summary>
            Constructor del controlador BankAccountController.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.BankAccountController.CreateBankAccount(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Crea una cuenta bancaria para un usuario.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="monedaId">Identificador de la moneda. Ejemplo: 2</param>
            <param name="saldo">Saldo inicial de la cuenta. Ejemplo: 1000.50</param>
            <returns>Un ActionResult que indica si la cuenta bancaria se creó con éxito.</returns>
        </member>
        <member name="M:Nelmix.Controllers.BankAccountController.DeleteBankAccount(System.Int32,System.Int32)">
            <summary>
            Elimina una cuenta bancaria de un usuario.
            </summary>
            <param name="cuentaId">Identificador de la cuenta bancaria Ejemplo: 1.</param>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <returns>Un ActionResult que indica si la cuenta bancaria se eliminó con éxito.</returns>
        </member>
        <member name="M:Nelmix.Controllers.BankAccountController.AddBankAccountBalance(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Añade saldo a una cuenta bancaria.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="currencyId">Identificador de la moneda. Ejemplo: 2</param>
            <param name="balance">Saldo a añadir a la cuenta. Ejemplo: 50000</param>
            <returns>Un ActionResult que indica si el saldo se añadió con éxito a la cuenta bancaria.</returns>
        </member>
        <member name="T:Nelmix.Controllers.CurrenciesController">
            <summary>
            Controlador para operaciones relacionadas con divisas
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.CurrenciesController.#ctor">
            <summary>
            Constructor del controlador CurrenciesController.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.CurrenciesController.ConvertCurrencyDollars(System.Int32)">
            <summary>
            Convierte la moneda de una cuenta a dólares.
            </summary>
            <param name="accountId">Identificador de la cuenta de banco. Ejemplo: 1</param>
            <returns>Un ActionResult que indica si la conversión a dólares se realizó con éxito. </returns>
        </member>
        <member name="M:Nelmix.Controllers.CurrenciesController.BuyChipsInDollars(System.Int32,System.Int32,System.Int32)">
            <summary>
            Compra fichas solo en dólares.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="typeFileId">Identificador del tipo de ficha. Ejemplo: 1</param>
            <param name="quantity">Cantidad de fichas a comprar. Ejemplo: 10</param>
            <returns>Un ActionResult que indica si la compra de fichas en dólares se realizó con éxito.</returns>
        </member>
        <member name="M:Nelmix.Controllers.CurrenciesController.ExchangeChipsToCurrency(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Realiza el intercambio de fichas por una moneda específica menos dolares.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="typeFileId">Identificador del tipo de ficha. Ejemplo: 1</param>
            <param name="currencyDestination">Moneda de destino para el intercambio(Nombre especifico de la moneda). Ejemplo: Peso dominicano</param>
            <param name="quantityFichas">Cantidad de fichas a intercambiar. Ejemplo: 10</param>
            <returns>Un ActionResult que indica si el intercambio de fichas a moneda se realizó con éxito.</returns>
        </member>
        <member name="T:Nelmix.Controllers.FinanceController">
            <summary>
            Controlador para operaciones relacionadas con la economia del usuario
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.FinanceController.#ctor">
            <summary>
            Constructor del controlador FinanceController.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.FinanceController.GetFinancialStatement(System.Int32)">
            <summary>
            Obtiene el estado financiero de un usuario, incluyendo saldo actual, ganancias, pérdidas y fichas.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <returns>Un ActionResult que contiene el estado financiero del usuario. </returns>
        </member>
        <member name="M:Nelmix.Controllers.FinanceController.ObtenerGananciasYPérdidasPorJuego(System.Int32)">
            <summary>
            Obtiene las ganancias y pérdidas por juego de un usuario.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <returns>Un ActionResult que contiene una lista de ganancias y pérdidas por juego.</returns>
        </member>
        <member name="T:Nelmix.Controllers.GameController">
            <summary>
            Controlador para operaciones relacionadas con juegos de casino.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.GameController.#ctor">
            <summary>
            Constructor del controlador GameController.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.GameController.PlayCraps(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite a un usuario jugar a Craps.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="redChips">Cantidad de fichas rojas apostadas. Ejemplo: 10</param>
            <param name="yellowChips">Cantidad de fichas amarillas apostadas. Ejemplo: 0</param>
            <param name="greenChips">Cantidad de fichas verdes apostadas. Ejemplo: 0</param>
            <param name="blackChips">Cantidad de fichas negras apostadas. Ejemplo: 0</param>
            <returns>Un ActionResult que indica el resultado del juego.</returns>
        </member>
        <member name="M:Nelmix.Controllers.GameController.PlayTragaperras(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite a un usuario jugar a Tragaperras.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="redChips">Cantidad de fichas rojas apostadas. Ejemplo: 10</param>
            <param name="yellowChips">Cantidad de fichas amarillas apostadas. Ejemplo: 0</param>
            <param name="greenChips">Cantidad de fichas verdes apostadas. Ejemplo: 0</param>
            <param name="blackChips">Cantidad de fichas negras apostadas. Ejemplo: 0</param>
            <returns>Un ActionResult que indica el resultado del juego.</returns>
        </member>
        <member name="M:Nelmix.Controllers.GameController.PlayBlackjack(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Permite a un usuario jugar a Blackjack.
            </summary>
            <param name="userId">Identificador del usuario. Ejemplo: 1</param>
            <param name="redChips">Cantidad de fichas rojas apostadas. Ejemplo: 10</param>
            <param name="yellowChips">Cantidad de fichas amarillas apostadas. Ejemplo: 0</param>
            <param name="greenChips">Cantidad de fichas verdes apostadas. Ejemplo: 0</param>
            <param name="blackChips">Cantidad de fichas negras apostadas. Ejemplo: 0</param>
            <returns>Un ActionResult que indica el resultado del juego.</returns>
        </member>
        <member name="T:Nelmix.Controllers.UserController">
            <summary>
            Controlador para operaciones relacionadas con Usuario.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.UserController.#ctor(Nelmix.Context.CasinoContext)">
            <summary>
            Constructor del controlador UserController.
            </summary>
        </member>
        <member name="M:Nelmix.Controllers.UserController.RegisterAsync(Nelmix.Models.Usuario)">
            <summary>
            Registra un nuevo usuario.
            </summary>
            <param name="oUsuario">Objeto de tipo Usuario que contiene los datos del usuario a registrar.</param>
            <returns>Un ActionResult que indica el resultado de la operación.</returns>
        </member>
        <member name="M:Nelmix.Controllers.UserController.Login(System.String,System.String)">
            <summary>
            Inicia sesión de un usuario.
            </summary>
            <param name="email">Correo electrónico del usuario. Ejemplo: john@gmail.com</param>
            <param name="password">Contraseña del usuario. Ejemplo: 123</param>
            <returns>Un ActionResult que indica el resultado de la operación.</returns>
        </member>
        <member name="M:Nelmix.Controllers.UserController.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Cambia la contraseña de un usuario.
            </summary>
            <param name="email">Correo electrónico del usuario. Ejemplo: john@gmail.com</param>
            <param name="password">Contraseña del usuario. Ejemplo: 123</param>
            <param name="newPassword">Nueva contraseña para el usuario. Ejemplo: 1234</param>
            <returns>Un ActionResult que indica el resultado de la operación.</returns>
        </member>
        <member name="M:Nelmix.Controllers.UserController.AsignarAdultoResponsable(System.String,System.String)">
            <summary>
            Asigna un adulto responsable a un usuario menor.
            </summary>
            <param name="mailUserMinor">Correo electrónico del usuario menor.  Ejemplo: userMinor@gmail.com</param>
            <param name="nameAdult">Nombre del adulto responsable.  Ejemplo: john</param>
            <returns>Un ActionResult que indica el resultado de la operación.</returns>
        </member>
        <member name="M:Nelmix.Controllers.UserController.DesactivateUser(System.Int32)">
            <summary>
            Desactiva un usuario.
            </summary>
            <param name="userId">Identificador del usuario a desactivar. Ejemplo: 1</param>
            <returns>Un ActionResult que indica el resultado de la operación.</returns>
        </member>
        <member name="T:Nelmix.Models.ApuestasUsuario">
            <summary>
            Representa una apuesta realizada por un usuario en un juego específico.
            </summary>
        </member>
        <member name="P:Nelmix.Models.ApuestasUsuario.ApuestaId">
            <summary>
            Obtiene o establece el identificador único de la apuesta.
            </summary>
        </member>
        <member name="P:Nelmix.Models.ApuestasUsuario.UsuarioId">
            <summary>
            Obtiene o establece el identificador del usuario que realizó la apuesta.
            </summary>
        </member>
        <member name="P:Nelmix.Models.ApuestasUsuario.JuegoId">
            <summary>
            Obtiene o establece el identificador del juego en el que se realizó la apuesta.
            </summary>
        </member>
        <member name="P:Nelmix.Models.ApuestasUsuario.CantidadGanada">
            <summary>
            Obtiene o establece la cantidad ganada en la apuesta. Puede ser nulo si no hubo ganancias.
            </summary>
        </member>
        <member name="P:Nelmix.Models.ApuestasUsuario.CantidadPerdida">
            <summary>
            Obtiene o establece la cantidad perdida en la apuesta. Puede ser nulo si no hubo pérdidas.
            </summary>
        </member>
        <member name="T:Nelmix.Models.CuentasBancaria">
            <summary>
            Representa una cuenta bancaria asociada a un usuario en una moneda específica.
            </summary>
        </member>
        <member name="P:Nelmix.Models.CuentasBancaria.CuentaId">
            <summary>
            Obtiene o establece el identificador único de la cuenta bancaria.
            </summary>
            <example>1</example>
        </member>
        <member name="P:Nelmix.Models.CuentasBancaria.UserId">
            <summary>
            Obtiene o establece el identificador del usuario al que está asociada la cuenta bancaria.
            </summary>
            <example>3</example>
        </member>
        <member name="P:Nelmix.Models.CuentasBancaria.MonedaId">
            <summary>
            Obtiene o establece el identificador de la moneda en la que se mantiene el saldo de la cuenta.
            </summary>
            <example>2</example>
        </member>
        <member name="P:Nelmix.Models.CuentasBancaria.Saldo">
            <summary>
            Obtiene o establece el saldo actual de la cuenta bancaria en la moneda especificada.
            </summary>
            <example>1500.50</example>
        </member>
        <member name="T:Nelmix.Models.EstadosUsuario">
            <summary>
            Representa un estado asociado a un usuario.
            </summary>
        </member>
        <member name="P:Nelmix.Models.EstadosUsuario.EstadoId">
            <summary>
            Obtiene o establece el identificador único del estado.
            </summary>
        </member>
        <member name="P:Nelmix.Models.EstadosUsuario.Nombre">
            <summary>
            Obtiene o establece el nombre del estado.
            </summary>
        </member>
        <member name="T:Nelmix.Models.Ficha">
            <summary>
            Representa una ficha utilizada en el sistema.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Ficha.FichaId">
            <summary>
            Obtiene o establece el identificador único de la ficha.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Ficha.TipoFichaId">
            <summary>
            Obtiene o establece el identificador del tipo de ficha asociado.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Ficha.CantidadDisponible">
            <summary>
            Obtiene o establece la cantidad disponible de esta ficha.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Ficha.UsuarioId">
            <summary>
            Obtiene o establece el identificador del usuario al que pertenece esta ficha.
            </summary>
        </member>
        <member name="T:Nelmix.Models.GananciasYPérdidasPorJuego">
            <summary>
            Representa las ganancias y pérdidas por juego de un usuario.
            </summary>
        </member>
        <member name="P:Nelmix.Models.GananciasYPérdidasPorJuego.NombreJuego">
            <summary>
            Obtiene o establece el nombre del juego.
            </summary>
        </member>
        <member name="P:Nelmix.Models.GananciasYPérdidasPorJuego.Ganancias">
            <summary>
            Obtiene o establece la cantidad de ganancias en el juego.
            </summary>
        </member>
        <member name="P:Nelmix.Models.GananciasYPérdidasPorJuego.Pérdidas">
            <summary>
            Obtiene o establece la cantidad de pérdidas en el juego.
            </summary>
        </member>
        <member name="T:Nelmix.Models.Juego">
            <summary>
            Representa un juego en la aplicación.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Juego.JuegoId">
            <summary>
            Obtiene o establece el identificador único del juego.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Juego.Nombre">
            <summary>
            Obtiene o establece el nombre del juego.
            </summary>
        </member>
        <member name="T:Nelmix.Models.Moneda">
            <summary>
            Representa una moneda en la aplicación.
            </summary>
        </member>
        <member name="M:Nelmix.Models.Moneda.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Nelmix.Models.Moneda"/>.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Moneda.MonedaId">
            <summary>
            Obtiene o establece el identificador único de la moneda.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Moneda.Nombre">
            <summary>
            Obtiene o establece el nombre de la moneda.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Moneda.Símbolo">
            <summary>
            Obtiene o establece el símbolo de la moneda.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Moneda.TasasDeCambios">
            <summary>
            Obtiene o establece la colección de tasas de cambio asociadas a esta moneda.
            </summary>
        </member>
        <member name="T:Nelmix.Models.TasasDeCambio">
            <summary>
            Representa una tasa de cambio entre dos monedas en la aplicación.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TasasDeCambio.TasaId">
            <summary>
            Obtiene o establece el identificador único de la tasa de cambio.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TasasDeCambio.MonedaId">
            <summary>
            Obtiene o establece el identificador de la moneda asociada a la tasa de cambio.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TasasDeCambio.Tasa">
            <summary>
            Obtiene o establece el valor de la tasa de cambio entre monedas.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TasasDeCambio.Moneda">
            <summary>
            Obtiene o establece la moneda asociada a la tasa de cambio.
            </summary>
        </member>
        <member name="T:Nelmix.Models.TiposDeFicha">
            <summary>
            Representa un tipo de ficha utilizado en la aplicación.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TiposDeFicha.TipoFichaId">
            <summary>
            Obtiene o establece el identificador único del tipo de ficha.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TiposDeFicha.Nombre">
            <summary>
            Obtiene o establece el nombre del tipo de ficha.
            </summary>
        </member>
        <member name="P:Nelmix.Models.TiposDeFicha.Valor">
            <summary>
            Obtiene o establece el valor asociado al tipo de ficha.
            </summary>
        </member>
        <member name="T:Nelmix.Models.Usuario">
            <summary>
            Representa un usuario en la aplicación.
            </summary>
        </member>
        <member name="P:Nelmix.Models.Usuario.UserId">
            <summary>
            Obtiene o establece el identificador único del usuario.
            </summary>
            <example>1</example>
        </member>
        <member name="P:Nelmix.Models.Usuario.Nombre">
            <summary>
            nombre del usuario.
            </summary>
            <example>John</example>
        </member>
        <member name="P:Nelmix.Models.Usuario.Edad">
            <summary>
            edad del usuario.
            </summary>
            <example>30</example>
        </member>
        <member name="P:Nelmix.Models.Usuario.Email">
            <summary>
            correo electrónico del usuario.
            </summary>
            <example>john@gmail.com</example>
        </member>
        <member name="P:Nelmix.Models.Usuario.Contraseña">
            <summary>
            la contraseña del usuario.
            </summary>
            <example>1234</example>
        </member>
        <member name="P:Nelmix.Models.Usuario.EstadoId">
            <summary>
            el identificador del estado del usuario (Si aplica).
            </summary>
            <example>1</example>
        </member>
        <member name="P:Nelmix.Models.Usuario.AdultoAsignadoId">
            <summary>
            el identificador del adulto asignado al usuario (Si aplica).
            </summary>
            <example>0</example>
        </member>
        <member name="T:Nelmix.Services.BankAccountService">
            <summary>
            Clase que proporciona servicios relacionados con cuentas bancarias, como la creación, eliminación y adición de saldo a las cuentas bancarias de los usuarios.
            </summary>
        </member>
        <member name="M:Nelmix.Services.BankAccountService.CreateBankAccount(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Crea una nueva cuenta bancaria para un usuario con un saldo inicial y una moneda específica.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="currencyId">Identificador de la moneda.</param>
            <param name="balance">Saldo inicial de la cuenta.</param>
            <returns>True si la cuenta bancaria se crea con éxito, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.BankAccountService.DeleteBankAccount(System.Int32,System.Int32)">
            <summary>
            Elimina una cuenta bancaria de un usuario.
            </summary>
            <param name="cuentaId">Identificador de la cuenta bancaria.</param>
            <param name="userId">Identificador del usuario.</param>
            <returns>True si la cuenta bancaria se elimina con éxito, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.BankAccountService.AddBankAccountBalance(System.Int32,System.Int32,System.Decimal)">
            <summary>
            Agrega saldo a una cuenta bancaria de un usuario en una moneda específica.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="currencyId">Identificador de la moneda.</param>
            <param name="balance">Saldo a agregar a la cuenta bancaria.</param>
            <returns>True si se agrega saldo con éxito, de lo contrario, False.</returns>
        </member>
        <member name="T:Nelmix.Services.CurrenciesService">
            <summary>
            Clase que gestiona operaciones relacionadas con conversiones de moneda y fichas.
            </summary>
        </member>
        <member name="M:Nelmix.Services.CurrenciesService.ConvertCurrencyDollars(System.Int32)">
            <summary>
            Convierte el saldo de una cuenta a dólares.
            </summary>
            <param name="accountId">Identificador de la cuenta.</param>
            <returns>El saldo convertido a dólares.</returns>
        </member>
        <member name="M:Nelmix.Services.CurrenciesService.BuyChipsInDollars(System.Int32,System.Int32,System.Int32)">
            <summary>
            Compra fichas en dólares para un usuario.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="typeFileId">Identificador del tipo de ficha.</param>
            <param name="quantity">Cantidad de fichas a comprar.</param>
            <returns>Un mensaje indicando si la compra de fichas fue exitosa o un mensaje de error.</returns>
        </member>
        <member name="M:Nelmix.Services.CurrenciesService.ExchangeChipsToCurrency(System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Intercambia fichas por una moneda específica para un usuario.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="typeFileId">Identificador del tipo de ficha.</param>
            <param name="currencyDestination">Moneda de destino para la conversión.</param>
            <param name="quantityFichas">Cantidad de fichas a convertir.</param>
            <returns>Un mensaje indicando si la conversión de fichas fue exitosa o un mensaje de error.</returns>
        </member>
        <member name="T:Nelmix.Services.FinanceService">
            <summary>
            Clase que gestiona operaciones relacionadas con el estado financiero de los usuarios, como la obtención de saldos, ganancias, pérdidas y fichas.
            </summary>
        </member>
        <member name="M:Nelmix.Services.FinanceService.GetFinancialStatusUser(System.Int32,System.Decimal@,System.Decimal@,System.Decimal@,System.Int32@)">
            <summary>
            Obtiene el estado financiero de un usuario, incluyendo su saldo actual, ganancias, pérdidas y cantidad de fichas.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="balance">Saldo actual del usuario.</param>
            <param name="earnings">Ganancias totales del usuario.</param>
            <param name="losses">Pérdidas totales del usuario.</param>
            <param name="chips">Cantidad de fichas del usuario.</param>
            <returns>True si se obtiene el estado financiero con éxito, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.FinanceService.GetProfitAndLossFromGaming(System.Int32)">
            <summary>
            Obtiene las ganancias y pérdidas por juego para un usuario específico.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <returns>Una lista de objetos de tipo GananciasYPérdidasPorJuego que contiene información sobre ganancias y pérdidas por juego.</returns>
        </member>
        <member name="T:Nelmix.Services.GameService">
            <summary>
            Clase que gestiona operaciones relacionadas con juegos, como la verificación de elegibilidad para jugar, la disponibilidad de fichas y los límites de pérdida y ganancia.
            </summary>
        </member>
        <member name="M:Nelmix.Services.GameService.VerifyEligibilityToPlay(System.Int32)">
            <summary>
            Verifica si un usuario es elegible para jugar.
            </summary>
            <param name="userId">Identificador del usuario.</param>
        </member>
        <member name="M:Nelmix.Services.GameService.VerifyAvailabilityFiches(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Verifica si un usuario tiene suficientes fichas disponibles para jugar.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="redChips">Cantidad de fichas rojas.</param>
            <param name="yellowChips">Cantidad de fichas amarillas.</param>
            <param name="greenChips">Cantidad de fichas verdes.</param>
            <param name="blackChips">Cantidad de fichas negras.</param>
            <returns>True si el usuario tiene suficientes fichas, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.GameService.VerifyLoseLimit(System.Int32,System.Int32)">
            <summary>
            Verifica si un usuario ha excedido el límite de pérdida en un juego específico.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="juegoId">Identificador del juego.</param>
            <returns>True si el usuario ha excedido el límite de pérdida, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.GameService.VerifyGainLimit(System.Int32)">
            <summary>
            Verifica si un usuario ha excedido el límite de pérdida en un juego específico.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="juegoId">Identificador del juego.</param>
            <returns>True si el usuario ha excedido el límite de pérdida, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.GameService.ManageUserGame(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Gestiona el juego de un usuario, actualizando las fichas y el estado de victoria en la base de datos.
            </summary>
            <param name="userId">Identificador del usuario.</param>
            <param name="redChips">Cantidad de fichas rojas.</param>
            <param name="yellowChips">Cantidad de fichas amarillas.</param>
            <param name="greenChips">Cantidad de fichas verdes.</param>
            <param name="blackChips">Cantidad de fichas negras.</param>
            <param name="victory">Indica si el usuario ha ganado el juego.</param>
            <param name="gameId">Identificador del juego.</param>
            <returns>True si la gestión del juego se realiza con éxito, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.GameService.VerifyPlay(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Verifica si un usuario cumple con los requisitos para jugar, incluyendo elegibilidad, disponibilidad de fichas y límites de ganancia y pérdida.
            </summary>
            <param name="usuarioId">Identificador del usuario.</param>
            <param name="redChips">Cantidad de fichas rojas.</param>
            <param name="yellowChips">Cantidad de fichas amarillas.</param>
            <param name="greenChips">Cantidad de fichas verdes.</param>
            <param name="blackChips">Cantidad de fichas negras.</param>
            <param name="juegoId">Identificador del juego.</param>
            <returns>True si el usuario cumple con los requisitos para jugar, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.GameService.PlayCraps">
            <summary>
            Simula un juego de Craps. Lanza dos dados y calcula la suma de los valores.
            Determina si el jugador ganó o perdió según las reglas del juego.
            </summary>
            <returns>
            Un valor booleano que indica si el jugador ganó (true), perdió (false) o si el resultado aún no se ha determinado (null).
            Un mensaje descriptivo del resultado del juego.
            </returns>
        </member>
        <member name="M:Nelmix.Services.GameService.PlayTragaperras">
            <summary>
            Simula un juego de tragaperras con tres símbolos. Genera aleatoriamente tres símbolos y determina si el jugador ha ganado si los tres símbolos son iguales.
            </summary>
            <returns>
            Un valor booleano que indica si el jugador ganó (true) o perdió (false).
            Un mensaje descriptivo del resultado del juego, incluyendo los símbolos obtenidos.
            </returns>
        </member>
        <member name="M:Nelmix.Services.GameService.PlayBlackjack">
            <summary>
            Simula un juego de Blackjack. Genera dos cartas aleatorias y calcula la suma de sus valores.
            Determina si el jugador ganó si la suma es igual a 21.
            </summary>
            <returns>
            Un valor booleano que indica si el jugador ganó (true) o perdió (false).
            Un mensaje descriptivo del resultado del juego, incluyendo la suma de cartas obtenida.
            </returns>
        </member>
        <member name="T:Nelmix.Services.UserService">
            <summary>
            Clase que gestiona operaciones relacionadas con usuarios, como el registro, inicio de sesión y cambio de contraseña.
            </summary>
            
        </member>
        <member name="M:Nelmix.Services.UserService.RegisterUser(Nelmix.Models.Usuario)">
            <summary>
            Registra un nuevo usuario en la base de datos.
            </summary>
            <param name="usuario">Objeto Usuario que contiene los datos del usuario a registrar.</param>
            <returns>True si el registro fue exitoso, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.UserService.Login(System.String,System.String)">
            <summary>
            Inicia sesión de un usuario utilizando su correo electrónico y contraseña.
            </summary>
            <param name="email">Correo electrónico del usuario.</param>
            <param name="password">Contraseña del usuario.</param>
            <returns>True si la sesión se inicia con éxito, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.UserService.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Cambia la contraseña de un usuario.
            </summary>
            <param name="email">Correo electrónico del usuario.</param>
            <param name="password">Contraseña actual del usuario.</param>
            <param name="newPassword">Nueva contraseña que se asignará al usuario.</param>
            <returns>True si la contraseña se cambia con éxito, de lo contrario, False.</returns>
        </member>
        <member name="M:Nelmix.Services.UserService.AssignAdultResponsible(System.String,System.String)">
            <summary>
            Asigna un adulto responsable a un usuario menor.
            </summary>
            <param name="mailUserMinor">Correo electrónico del usuario menor.</param>
            <param name="nameAdult">Nombre del adulto responsable.</param>
            <returns>Una tupla que contiene un valor booleano (True si la asignación fue exitosa) y un mensaje de texto.</returns>
        </member>
        <member name="M:Nelmix.Services.UserService.ChangeUserStatusInactive(System.Int32)">
            <summary>
            Cambia el estado de un usuario a inactivo.
            </summary>
            <param name="userId">Identificador del usuario.</param>
        </member>
        <member name="M:Nelmix.Services.UserService.ConvertSha256(System.String)">
            <summary>
            Convierte una cadena en un valor hash SHA-256.
            </summary>
            <param name="inputString">Cadena de entrada que se convertirá en hash.</param>
            <returns>El hash SHA-256 de la cadena de entrada.</returns>
        </member>
        <member name="T:Connection">
            <summary>
            Clase que proporciona la cadena de conexión a la base de datos SQL Server desde la configuración de la aplicación.
            </summary>
        </member>
        <member name="M:Connection.#ctor">
            <summary>
            Constructor de la clase que inicializa la cadena de conexión desde la configuración de la aplicación.
            </summary>
        </member>
        <member name="M:Connection.getCadenaSQL">
            <summary>
            Obtiene la cadena de conexión a la base de datos SQL Server.
            </summary>
            <returns>La cadena de conexión a la base de datos.</returns>
        </member>
    </members>
</doc>
